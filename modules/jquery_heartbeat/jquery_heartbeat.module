<?php
// $Id:

/**
 * @file
 * The 'jquery_heartbeat' module is a Drupal module wrapper for the 'Heartbeat' 
 * jQuery plug-in by Jason Levine and customized by A J Richards. This plug-in 
 * makes it possible to poll the server at given intervals.
 * 
 * @see
 * See http://jquery.com/plugins/project/Heartbeat for more information.
 * 
 * 
 * ------------------------
 * Drupal Module Wrapper
 * ------------------------
 * 
 * This wrapper module supports all settings and attributes of the original 
 * jQuery plug-in. The module also contains sample code to show how it can be 
 * used inside Drupal.
 * 
 * @copyright  (c) 2008 Martin Lanser
 * @author     Martin Lanser (redbox2000@optonline.net
 * @license    Released under GNU/GPL License [ http://www.gnu.org/copyleft/gpl.html ]
 */

/** ============================================================================
 *                              C O N S T A N T S
 *  ============================================================================
 */

// Define thingamajig name
define('JQRY_HEARTBEAT',      'Heartbeat');
define('JQRY_HEARTBEAT_MOD',  'jQuery Heartbeat Plug-in');
define('JQRY_HEARTBEAT_DELAY', 1500);
define('JQRY_HEARTBEAT_DEMO', TRUE); // Should be set to FALSE on production systems

/** ============================================================================
 *        D R U P A L   H O O K S   &   R E L A T E D   F U N C T I O N S
 *  ============================================================================
 */

/**
 * Implementation of hook_menu().
 */
function jquery_heartbeat_menu() {
	$items['admin/settings/jquery_heartbeat'] = array(
		'title' => 'jQuery Heartbeat Settings',
		'description' => "Configure the '%PLUG' jQuery plug-in", array('%PLUG' => JQRY_HEARTBEAT),
		'page callback' => 'drupal_get_form',
    'page arguments' => array('jquery_heartbeat_settings'),
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

/**
 * Admin settings form.
 */
function jquery_heartbeat_settings() {

  $form['jquery_heartbeat_js'] = array(
    '#type' => 'textarea',
    '#title' => t("Javascript to initialize the '%PLUG' jQuery plug-in", array('%PLUG' => JQRY_HEARTBEAT)),
    '#description' => t("This script will be included on every Drupal page. Please note that you can also use the following placeholders: %DELAY, %SCRIPT, %CALLBACK, %DIV_ID", array('%DELAY' => '_DEALAY_', '%SCRIPT' => '_SCRIPT_', '%CALLBACK' => '_CALLBACK_', '%DIV_ID' => '_DIV_ID_')),
    '#default_value' => _jquery_heartbeat_get_js(),
    );

  $form['jquery_heartbeat_compressed'] = array(
    '#type' => 'checkbox',
    '#title' => t("Load compressed Javascript code"),
    '#default_value' => variable_get('jquery_heartbeat_compressed', 1),
    '#description' => t("Define whether to load compressed version of Javascript code."),
    '#disabled' => FALSE,
  );

  return system_settings_form($form);
}

/**
 * Load required Javascript and CSS stylesheet files. It's really a custom 'init' 
 * hook, but we can't call it that, since we only want to load/run this under 
 * certain circumstances.
 * 
 * Call this function (safely) from any module by using:
 * 
 *    module_invoke('jquery_heartbeat', 'set', [div_id], [delay], [callback], [script]);
 * 
 * @param INTEGER $delay
 *    Delay in miliseconds
 * 
 * @param STRING $div_id
 *    Name/ID for HTML DIV tag that will be updated
 *
 * @param STRING $script
 *    Name/url of PHP script to call
 * 
 * @param STRING  $callback
 *    Name of callback function
 * 
 * @param BOOL $demo
 *    If TRUE, then this module will run in DEMO mode
 */
function jquery_heartbeat_set($delay = 1500, $div_id = NULL, $script = NULL, $callback = NULL, $demo = FALSE) {

  // Set up core variables
  $module_dir = drupal_get_path('module', 'jquery_heartbeat');
  $js_version = (variable_get('jquery_heartbeat_compressed', 1)) ? 'heartbeat.compressed.js' : 'heartbeat.js';

  // Load core scripts
  drupal_add_js($module_dir .'/'. $js_version);

  // Check if we're running in demo mode
  if ($demo && JQRY_HEARTBEAT_DEMO) {
    if (empty($div_id)) $div_id = 'heartbeat-demo1';  
    if (empty($script)) $script = base_path() . $module_dir . '/heartbeat.php';

    drupal_add_js($module_dir .'/heartbeat.demo.js');
    $callback = '$.jheartbeat_demo.percent_bar(\'heartbeat-demo2\'); $.jheartbeat_demo.random_num(\'heartbeat-demo3\'); $.jheartbeat_demo.random_clr(\'heartbeat-demo4\');';
  }

  // Prep and load Heartbeat init script
  if (empty($div_id) && !empty($script)) {
    drupal_set_message(t('ERROR: Missing or invalid %TAG ID for %MOD', array('%TAG' => '<div>', '%MOD' => JQRY_HEARTBEAT_MOD)), 'error');
  }
  elseif (empty($script) && empty($callback)) {
    drupal_set_message(t('ERROR: Missing callback or script for %MOD', array('%MOD' => JQRY_HEARTBEAT_MOD)), 'error');
  }
  else {
    if (intval($delay < 1)) $delay  = JQRY_HEARTBEAT_DELAY;
    if (empty($callback)) $callback = ';/* - no callback - */';
  
    $js = _jquery_heartbeat_get_js();

    $js = str_ireplace('_DIV_ID_',   check_plain($div_id), $js);
    $js = str_ireplace('_DELAY_',    intval($delay),       $js);
    $js = str_ireplace('_CALLBACK_', $callback,            $js);
    $js = str_ireplace('_SCRIPT_',   check_url($script),   $js);
  
    drupal_add_js($js, 'inline','header');
  }
}


/** ============================================================================
 *                   T E S T   F u n c t i o n s   &   F o r m s
 *  ============================================================================
 */

/**
 * Implementation of hook_block().
 * 
 * This block is designed for demo purposes only.
 */
function jquery_heartbeat_block($op = 'list', $delta = 0) {

  switch ($op) {
    case 'list':
      $block[0]['info'] = t('jQuery Hearbeat Test');
      return $block;
      break;
    
    case 'view':
      $block['subject'] = t('jQuery Hearbeat Test');
      $block['content'] = jquery_heartbeat_test();
    
      return $block;
      break;
  }
}

/**
 * Callback function to display jQuery Heartbeat Test screen
 *
 * @return STRING
 */
function jquery_heartbeat_test() {

  jquery_heartbeat_set(1500, '', '', '', TRUE);

  $output  = '<div id="heartbeat-demo1">'. t('Loading jQuery Hearbeat Test ...'). '</div>'
           . '<div id="heartbeat-demo2">'
           . '<table><tbody>'
           . '<tr><td class="left">&nbsp;</td><td class="right">&nbsp;</td></tr>'
           . '<tr><td class="percent" colspan="2">&nbsp;</td></tr>'
           . '</tbody></table>'
           . '</div>'
           . '<div id="heartbeat-demo3">'. t('Guessing ...') .'</div>'
           . '<div id="heartbeat-btn" onclick="$.jheartbeat.startstop(this);">'. t('Stop') .'</div>';

  return $output;
}


/** ============================================================================
 *                           L O C A L   H E L P E R S
 *  ============================================================================
 */

/**
 * This Javascript snippet should be all you need to initiallize the jquery.cookie plug-in.
 *
 * @return STRING
 */
function _jquery_heartbeat_get_js() {

  $default = <<<HEARTBEAT

// Initialize Heartbeat:
$(document).ready(function() {
$.jheartbeat.set({ url: "_SCRIPT_", delay: _DELAY_, div_id: "_DIV_ID_" }, function () { _CALLBACK_ });
});

HEARTBEAT;

  return variable_get('jquery_heartbeat_js', $default);
}
